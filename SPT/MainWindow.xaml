<dx:DXWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
        xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
        xmlns:local="clr-namespace:SPT"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" x:Class="SPT.MainWindow" 
        Title="SPT" WindowStartupLocation="CenterScreen" Icon="SPT.ico" Height="700" Width="1100" Closing="MainWindow_Closing" Loaded="MainWindow_Loaded">
    <dx:DXWindow.Resources>
        <DataTemplate x:Key="rowIndicatorContentTemplate">
            <StackPanel VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch">
                <TextBlock Text="{Binding Path=RowHandle.Value}"
                           TextAlignment="Center"
                           Foreground="LightGray"/>
            </StackPanel>
        </DataTemplate>       

        <ControlTemplate x:Key="rangeEditorPanel" TargetType="{x:Type ContentControl}">
            <ContentPresenter x:Name="presenter" />
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=Orientation, ElementName=editor}" Value="Horizontal">
                    <Setter Property="MaxWidth" Value="400" TargetName="presenter" />
                    <Setter Property="MaxHeight" Value="50" TargetName="presenter" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Orientation, ElementName=editor}" Value="Vertical">
                    <Setter Property="MaxWidth" Value="50" TargetName="presenter" />
                    <Setter Property="MaxHeight" Value="400" TargetName="presenter" />
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <local:ReverseConverter x:Key="rc"></local:ReverseConverter>
    </dx:DXWindow.Resources>

    <dx:DXWindow.CommandBindings>
        <CommandBinding Command="local:MainWindow.SendCommand" CanExecute="SendCommand_CanExecute" Executed="SendCommand_Executed"/>
        <CommandBinding Command="local:MainWindow.LoadNewCase" CanExecute="LoadNewCase_CanExecute" Executed="LoadNewCase_Executed"/>
        <CommandBinding Command="local:MainWindow.OperateTest" CanExecute="OperateTest_CanExecute" Executed="OperateTest_Executed"/>
        <CommandBinding Command="local:MainWindow.ExportCase" CanExecute="ExportCase_CanExecute" Executed="ExportCase_Executed"/>
        <CommandBinding Command="local:MainWindow.ExitApp" CanExecute="ExitApp_CanExecute" Executed="ExitApp_Executed"/>
        <CommandBinding Command="local:MainWindow.PortSet" CanExecute="PortSet_CanExecute" Executed="PortSet_Executed"/>
    </dx:DXWindow.CommandBindings>
    <DockPanel>
        <dxb:MainMenuControl DockPanel.Dock="Top" AllowCustomizationMenu="False" AllowRename="False">
            <dxb:BarSubItem Content="文件(F)">
                <dxb:BarButtonItem Content="加载案例" Command="local:MainWindow.LoadNewCase"
                                   IsEnabled="{Binding IsStart, Converter={StaticResource rc}, ConverterParameter=Select}"
                                       Glyph="{dx:DXImage Image=Open2_16x16.png}" />
                <dxb:BarSubItem Content="保存" Glyph="{dx:DXImage Image=Save_16x16.png}">
                    <dxb:BarButtonItem Content="案例" Command="local:MainWindow.ExportCase" CommandParameter="Case"
                                       Glyph="{dx:DXImage Image=ExportToCSV_16x16.png}"/>
                    <dxb:BarButtonItem Content="Log信息" Command="local:MainWindow.ExportCase" CommandParameter="Log"
                                       Glyph="{dx:DXImage Image=ExportToTXT_16x16.png}"/>
                </dxb:BarSubItem>
                <dxb:BarButtonItem Content="退出" Command="local:MainWindow.ExitApp"
                                       Glyph="{dx:DXImage Image=Close_16x16.png}"/>
            </dxb:BarSubItem>
            <dxb:BarSubItem Content="设置(S)">
                <dxb:BarButtonItem Content="端口" Command="local:MainWindow.PortSet"  IsEnabled="{Binding ElementName=OpenPort, Path=IsChecked, Converter={StaticResource rc}, ConverterParameter=PortSet}"
                                       Glyph="{dx:DXImage Image=GroupFieldCollection_16x16.png}"/>
            </dxb:BarSubItem>
            <dxb:BarSubItem Content="帮助(H)">
                <dxb:BarButtonItem Content="关于"
                                       Glyph="{dx:DXImage Image=BOCountry_16x16.png}"/>
            </dxb:BarSubItem>
        </dxb:MainMenuControl>

        <StackPanel DockPanel.Dock="Top" Height="35" Orientation="Horizontal">
            <TextBlock Text="端口：" VerticalAlignment="Center" Margin="10,0,0,0"/>
            <ComboBox x:Name="portComboBox" IsEnabled="{Binding ElementName=OpenPort, Path=IsChecked, Converter={StaticResource rc}, ConverterParameter=Port}" DropDownOpened="portComboBox_DropDownOpened" Width="100" VerticalAlignment="Center"></ComboBox>
            <TextBlock Text="波特率：" VerticalAlignment="Center" Margin="20,0,0,0"/>
            <ComboBox x:Name="baudComboBox" SelectedItem="{Binding BaudRate}" IsEnabled="{Binding ElementName=OpenPort, Path=IsChecked, Converter={StaticResource rc}, ConverterParameter=Port}" Width="100" VerticalAlignment="Center"></ComboBox>
            <dxe:CheckEdit x:Name="OpenPort" ToolTip="打开串口" Checked="OpenPort_Checked" Unchecked="OpenPort_Unchecked" Height="30" VerticalAlignment="Center" Style="{StaticResource slider}" Width="120" Margin="20,0,24,0" />

            <dx:SimpleButton Content="添加行" IsEnabled="{Binding IsStart, Converter={StaticResource rc}, ConverterParameter=Select}"
                             Glyph="{dx:DXImage Image=InsertRows_16x16.png}"  
                             VerticalAlignment="Center" Margin="20,0,0,0" ToolTip="插入到选中行之上" Click="Add_Click"></dx:SimpleButton>
            <dx:SimpleButton Content="删除行" IsEnabled="{Binding IsStart, Converter={StaticResource rc}, ConverterParameter=Select}"
                             Glyph="{dx:DXImage Image=InsertCells_16x16.png}"
                             VerticalAlignment="Center" Margin="5,0,0,0" ToolTip="删除选中行"  Click="Remove_Click"></dx:SimpleButton>
        </StackPanel>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <dxg:GridControl x:Name="TestGrid" IsEnabled="{Binding IsStart, Converter={StaticResource rc}, ConverterParameter=Select}"
                             ItemsSource="{Binding TestTable}" ShowBorder="True" Grid.Row="0" AutoGenerateColumns="None" SnapsToDevicePixels="True">
                <dxg:GridControl.Columns>
                    <dxg:GridColumn x:Name="IsSelect" FieldName="Select" Header="选择" Width="35"/>
                    <dxg:GridColumn x:Name="Send"  Header="发送" AllowEditing="True" Width="80">
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <dx:SimpleButton  Content="下发" IsEnabled="{Binding ElementName=OpenPort, Path=IsChecked}"
                                                  Width="80" Command="local:MainWindow.SendCommand" Glyph="{dx:DXImage Image=Download_16x16.png}" VerticalAlignment="Center"/>
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>
                    <dxg:GridColumn x:Name="Comment" FieldName="Comment" Header="名称" AllowEditing="True" Width="120"/>
                    <dxg:GridColumn x:Name="Content"  FieldName="Content" Header="内容" AllowEditing="True"  Width="800">
                        <dxg:GridColumn.EditSettings>
                            <dxe:TextEditSettings MaskType="RegEx" Mask="([0-9a-fA-F]{2} ){0,}"/>
                        </dxg:GridColumn.EditSettings>
                    </dxg:GridColumn>

                </dxg:GridControl.Columns>
                <dxg:GridControl.View>
                    <dxg:TableView 
                        CellStyle="{StaticResource FocusedCellStyle}" Style="{StaticResource TableViewStyle}"
                        FocusedRowHandle="{Binding SelectedRowIndex, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                        RowIndicatorContentTemplate="{StaticResource rowIndicatorContentTemplate}"
/>
                </dxg:GridControl.View>

            </dxg:GridControl>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1.8*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <GroupBox Header="选项" Grid.Column="0" Height="200">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="3*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Right"  Text="间隔时间(S)："></TextBlock>
                        <StackPanel Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Left" Width="150">
                            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                <Grid MaxWidth="420">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding ElementName=editor, Path=Minimum}" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,2,0" />
                                    <ContentControl Template="{StaticResource rangeEditorPanel}" Grid.Column="1">
                                        <dxe:TrackBarEdit x:Name="editor" SmallStep="1" LargeStep="5"
                                                          Value="{Binding Interval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="1" Maximum="10" TickFrequency="1" />
                                    </ContentControl>
                                    <TextBlock Text="{Binding ElementName=editor, Path=Maximum}" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2,0,0,0" />
                                </Grid>
                                <TextBlock Foreground="Brown" Text="{Binding ElementName=editor, Path=Value}" HorizontalAlignment="Center" />
                            </Grid>
                        </StackPanel>
                        <TextBlock Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Right"  Text="发送模式："></TextBlock>
                        <ComboBox x:Name="sendComobox" Grid.Column="1" Grid.Row="1" SelectedIndex="{Binding ModeIndex, Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Left" Height="25" Width="100"/>
                        <dxe:CheckEdit x:Name="allSelect" Content="全选" IsChecked="{x:Null}" IsEnabled="{Binding IsStart, Converter={StaticResource rc}, ConverterParameter=Select}" Grid.Column="0" Checked="allSelect_Checked" Unchecked="allSelect_Unchecked" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Center" Width="50" />
                        <StackPanel Grid.Column="1" Grid.Row="2" Height="30" VerticalAlignment="Center"  Orientation="Horizontal" HorizontalAlignment="Left" Width="150">
                            <dx:SimpleButton x:Name="start" Command="local:MainWindow.OperateTest" CommandParameter="Start"
                                             Visibility="{Binding IsStart, Converter={StaticResource rc}, ConverterParameter=Start}" 
                                             Content="开始" IsEnabled="{Binding ElementName=OpenPort, Path=IsChecked}" 
                                             VerticalAlignment="Center" Glyph="{dx:DXImage Image=Next_16x16.png}" Width="75" Height="25" GlyphToContentOffset="0"/>
                            <dx:SimpleButton x:Name="stop" Command="local:MainWindow.OperateTest" CommandParameter="Stop"
                                             Visibility="{Binding IsStart, Converter={StaticResource rc}, ConverterParameter=Stop}"
                                             Content="停止"  VerticalAlignment="Center" Glyph="{dx:DXImage Image=BORules_16x16.png}"
                                             Width="75" Height="25" GlyphToContentOffset="0"/>
                        </StackPanel>
                        <dxe:ImageEdit ShowBorder="False" Grid.Column="2" Grid.RowSpan="3" Source="OUT.PNG" Stretch="Fill" ShowMenu="False"/>

                    </Grid>
                </GroupBox>
                <GridSplitter Grid.Column="1" Style="{StaticResource VerGridSplitterStyle}"/>
                <GroupBox x:Name="Status" Header="状态" Grid.Column="2" Height="200">
                    <ListBox x:Name="StatusList" ItemsSource="{Binding ListStatus}"  Background="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"/>
                </GroupBox>
            </Grid>
        </Grid>
    </DockPanel>
</dx:DXWindow>
